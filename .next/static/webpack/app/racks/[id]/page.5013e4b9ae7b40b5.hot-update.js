"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/racks/[id]/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: () => (/* binding */ api)\n/* harmony export */ });\nasync function request(path) {\n    let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const base = \"http://localhost:4000\" || 0;\n    const url = \"\".concat(base).concat(path);\n    const response = await fetch(url);\n    // manejo de error uniforme\n    if (!response.ok) {\n        const text = await response.text();\n        let body;\n        try {\n            body = JSON.parse(text);\n        } catch (e) {\n            body = text;\n        }\n        const err = new Error(\"HTTP \".concat(response.status, \" \").concat(response.statusText));\n        err.status = response.status;\n        err.body = body;\n        throw err;\n    }\n    if (response.status === 204) return undefined;\n    const data = await response.json();\n    return data;\n}\nconst api = {\n    // Cinemas\n    getCinemas: ()=>request(\"/api/cinemas\"),\n    getCinema: (id)=>request(\"/api/cinemas/\".concat(id)),\n    updateCinema: (id, payload)=>request(\"/api/cinemas/\".concat(id), {\n            method: \"PATCH\",\n            body: JSON.stringify(payload),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }),\n    deleteCinema: (id)=>request(\"/api/cinemas/\".concat(id), {\n            method: \"DELETE\"\n        }),\n    // utilitarios (si los necesitas)\n    raw: (path, opts)=>request(path, opts)\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGVBQWVBLFFBQVdDLElBQVk7UUFBRUMsT0FBQUEsaUVBQW9CLENBQUM7SUFDekQsTUFBTUMsT0FBT0MsdUJBQStCLElBQUksQ0FBRTtJQUNsRCxNQUFNRyxNQUFNLEdBQVVOLE9BQVBFLE1BQVksT0FBTEY7SUFDdEIsTUFBTU8sV0FBVyxNQUFNQyxNQUFNRjtJQUcvQiwyQkFBMkI7SUFDM0IsSUFBSSxDQUFDQyxTQUFTRSxFQUFFLEVBQUU7UUFDaEIsTUFBTUMsT0FBTyxNQUFNSCxTQUFTRyxJQUFJO1FBQ2hDLElBQUlDO1FBQ0osSUFBSTtZQUFFQSxPQUFPQyxLQUFLQyxLQUFLLENBQUNIO1FBQU8sRUFBRSxVQUFNO1lBQUVDLE9BQU9EO1FBQU07UUFDdEQsTUFBTUksTUFBVyxJQUFJQyxNQUFNLFFBQTJCUixPQUFuQkEsU0FBU1MsTUFBTSxFQUFDLEtBQXVCLE9BQXBCVCxTQUFTVSxVQUFVO1FBQ3pFSCxJQUFJRSxNQUFNLEdBQUdULFNBQVNTLE1BQU07UUFDNUJGLElBQUlILElBQUksR0FBR0E7UUFDWCxNQUFNRztJQUNSO0lBRUEsSUFBSVAsU0FBU1MsTUFBTSxLQUFLLEtBQUssT0FBT0U7SUFFcEMsTUFBTUMsT0FBTyxNQUFNWixTQUFTYSxJQUFJO0lBQ2hDLE9BQU9EO0FBQ1Q7QUFFTyxNQUFNRSxNQUFNO0lBQ2pCLFVBQVU7SUFDVkMsWUFBWSxJQUFNdkIsUUFBa0I7SUFDcEN3QixXQUFXLENBQUNDLEtBQWV6QixRQUFnQixnQkFBbUIsT0FBSHlCO0lBQzNEQyxjQUFjLENBQUNELElBQVlFLFVBQ3pCM0IsUUFBZ0IsZ0JBQW1CLE9BQUh5QixLQUFNO1lBQ3BDRyxRQUFRO1lBQ1JoQixNQUFNQyxLQUFLZ0IsU0FBUyxDQUFDRjtZQUNyQkcsU0FBUztnQkFBRSxnQkFBZ0I7WUFBbUI7UUFDaEQ7SUFDRkMsY0FBYyxDQUFDTixLQUFlekIsUUFBYyxnQkFBbUIsT0FBSHlCLEtBQU07WUFBRUcsUUFBUTtRQUFTO0lBRXJGLGlDQUFpQztJQUNqQ0ksS0FBSyxDQUFDL0IsTUFBY0MsT0FBdUJGLFFBQWFDLE1BQU1DO0FBQ2hFLEVBQUUiLCJzb3VyY2VzIjpbIkU6XFxDT0RFUlxcQmlnIFByb3llY3RzXFxDaW5lbWFyay1Ib3l0c1xcZnJvbnRlbmRcXGxpYlxcYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQ2luZW1hIH0gZnJvbSBcIkAvdHlwZXMvY2luZW1hXCI7XHJcblxyXG5hc3luYyBmdW5jdGlvbiByZXF1ZXN0PFQ+KHBhdGg6IHN0cmluZywgb3B0czogUmVxdWVzdEluaXQgPSB7fSk6IFByb21pc2U8VD4ge1xyXG4gICAgY29uc3QgYmFzZSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgXCJcIjtcclxuICAgIGNvbnN0IHVybCA9IGAke2Jhc2V9JHtwYXRofWA7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XHJcblxyXG5cclxuICAvLyBtYW5lam8gZGUgZXJyb3IgdW5pZm9ybWVcclxuICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICBjb25zdCB0ZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xyXG4gICAgbGV0IGJvZHk6IGFueTtcclxuICAgIHRyeSB7IGJvZHkgPSBKU09OLnBhcnNlKHRleHQpOyB9IGNhdGNoIHsgYm9keSA9IHRleHQ7IH1cclxuICAgIGNvbnN0IGVycjogYW55ID0gbmV3IEVycm9yKGBIVFRQICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XHJcbiAgICBlcnIuc3RhdHVzID0gcmVzcG9uc2Uuc3RhdHVzO1xyXG4gICAgZXJyLmJvZHkgPSBib2R5O1xyXG4gICAgdGhyb3cgZXJyO1xyXG4gIH1cclxuXHJcbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjA0KSByZXR1cm4gdW5kZWZpbmVkIGFzIHVua25vd24gYXMgVDtcclxuICBcclxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gIHJldHVybiBkYXRhIGFzIFQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBhcGkgPSB7XHJcbiAgLy8gQ2luZW1hc1xyXG4gIGdldENpbmVtYXM6ICgpID0+IHJlcXVlc3Q8Q2luZW1hW10+KFwiL2FwaS9jaW5lbWFzXCIpLFxyXG4gIGdldENpbmVtYTogKGlkOiBzdHJpbmcpID0+IHJlcXVlc3Q8Q2luZW1hPihgL2FwaS9jaW5lbWFzLyR7aWR9YCksXHJcbiAgdXBkYXRlQ2luZW1hOiAoaWQ6IHN0cmluZywgcGF5bG9hZDogUGFydGlhbDxDaW5lbWE+KSA9PlxyXG4gICAgcmVxdWVzdDxDaW5lbWE+KGAvYXBpL2NpbmVtYXMvJHtpZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSxcclxuICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxyXG4gICAgfSksXHJcbiAgZGVsZXRlQ2luZW1hOiAoaWQ6IHN0cmluZykgPT4gcmVxdWVzdDx2b2lkPihgL2FwaS9jaW5lbWFzLyR7aWR9YCwgeyBtZXRob2Q6IFwiREVMRVRFXCIgfSksXHJcblxyXG4gIC8vIHV0aWxpdGFyaW9zIChzaSBsb3MgbmVjZXNpdGFzKVxyXG4gIHJhdzogKHBhdGg6IHN0cmluZywgb3B0cz86IFJlcXVlc3RJbml0KSA9PiByZXF1ZXN0PGFueT4ocGF0aCwgb3B0cyksXHJcbn07Il0sIm5hbWVzIjpbInJlcXVlc3QiLCJwYXRoIiwib3B0cyIsImJhc2UiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsInRleHQiLCJib2R5IiwiSlNPTiIsInBhcnNlIiwiZXJyIiwiRXJyb3IiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwidW5kZWZpbmVkIiwiZGF0YSIsImpzb24iLCJhcGkiLCJnZXRDaW5lbWFzIiwiZ2V0Q2luZW1hIiwiaWQiLCJ1cGRhdGVDaW5lbWEiLCJwYXlsb2FkIiwibWV0aG9kIiwic3RyaW5naWZ5IiwiaGVhZGVycyIsImRlbGV0ZUNpbmVtYSIsInJhdyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});